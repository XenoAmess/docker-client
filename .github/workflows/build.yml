# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Java CI

on: [ push ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        java: [ 8, 11 ]
        experimental: [ false ]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: temurin

      - name: Build on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          docker swarm init
          docker version
          docker info
          mvn --batch-mode clean install -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

      - name: Build on Windows
        if: matrix.os == 'windows-latest'
        run: |
          docker swarm init
          docker version
          docker info
          mvn --batch-mode clean install "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn" "-DskipTests" "-DskipITs"

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if:  ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set env vars for release deployment
        run: |
          echo "MAVEN_SERVER_ID=github" >> $GITHUB_ENV
        if:  ${{ github.ref == 'refs/heads/master' }}

      - name: Set env vars for snapshot deployment
        run: |
          echo "MAVEN_SERVER_ID=github-snapshots" >> $GITHUB_ENV
        if:  ${{ github.ref != 'refs/heads/master' }} # use != master to also easily support deploying other (feature) branches

      - name: Set up JDK 11 for deploying artifacts
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
          server-id: ${{ env.MAVEN_SERVER_ID }}
          server-username: GITHUB_ACTOR
          server-password: GITHUB_TOKEN

      - name: Deploy maven artifacts
        run: mvn -Pdeploy-github --batch-mode deploy -DskipTests -DskipITs -Dcheckstyle.skip=true -Dfindbugs.skip=true
        env:
          # DEPLOY_DOCKER_PACKAGES: organization level secret for uploading to Github Packages repository.
          GITHUB_ACTOR: ${{ env.DEPLOY_DOCKER_PACKAGES_USER}}
          GITHUB_TOKEN: ${{ secrets.DEPLOY_DOCKER_PACKAGES_TOKEN }}